47/90
summary(Repeat_elements$Age.at.First.Birth)
sd(Repeat_elements$Age.at.First.Birth)
names(Repeat_elements)
summary(Repeat_elements$Age.at.First.Birth, na.rm =T)
10/90
40/90
40/90
summary(Repeat_elements$How.Many.Live.Births.)
sd(Repeat_elements$How.Many.Live.Births.)
sd(Repeat_elements$How.Many.Live.Births., na.rm=T)
sd(Repeat_elements$Age.at.First.Birth, na.rm =T)
sum(is.na(Repeat_elements$Gail.Score))
load("~/Documents/WGBS_450K/roadmapWGBSto450K.RData")
str(roadmapWGBSto450K)
source("https://bioconductor.org/biocLite.R")
biocLite("LOLA")
biocLite("LOLA")
library(LOLA)
biocLite("LOLA")
library(LOLA)
0.4-.02
0.04-0.02
0.02-0.04
library(NanoStringQCPro)
GBM_Data_Dir <- "/Users/kevinjohnson/Documents/Nano string"
rccDir <- file.path(GBM_Data_Dir, "RCCData")
exampleDataDir <- system.file("extdata", package="NanoStringQCPro")
GBM_rccSet <- newRccSet(
rccFiles = dir(rccDir, full.names=TRUE)
,rlf = file.path(GBM_Data_Dir, "RLFData", "KCJ_iso1_C4190.rlf")
#  ,extraPdata = file.path(GBM_Data_Dir, "extraPdata", "GBM_Covars_NanoString.csv")
,experimentData.name = " Kevin Johnson"
,experimentData.title = "NanoString GBM data set"
)
str(GBM_rccSet)
Norm_GBM_rccSet <- preprocRccSet(rccSet=GBM_rccSet, normMethod="housekeeping", bgReference='negatives')
nano_data <- Norm_GBM_rccSet@assayData$normData
Sample_name_split <- strsplit(colnames(nano_data), "_")
colnames(nano_data) <- sapply(Sample_name_split, '[[', 3)
nano_data_genes <- nano_data[1:50, ]
Genes_strsplit <- strsplit(rownames(nano_data_genes), "_")
rownames(nano_data_genes) <- sapply(Genes_strsplit, '[[', 2)
# TET1, TET2, TET3 expression
Nanostring_norm_data <- t(nano_data_genes)
boxplot(Nanostring_norm_data[ ,'TET1'], Nanostring_norm_data[ ,'TET2'], Nanostring_norm_data[ ,'TET3'])
points(x=rep(1, 24), y=Nanostring_norm_data[ ,'TET1'], col='red', pch=16)
points(x=rep(2, 24), y=Nanostring_norm_data[ ,'TET2'], col='red', pch=16)
points(x=rep(3, 24), y=Nanostring_norm_data[ ,'TET3'], col='red', pch=16)
GBM_covars = read.csv("/Users/kevinjohnson/Documents/Nano string/extraPdata/GBM_Covars_NanoString.csv", header=T, stringsAsFactors=F)
all(GBM_covars$SampleID==rownames(Nanostring_norm_data))
logit2 = function(x) {
log2(x/(1-x))
}
GBM_covars$Avg_Mval <- logit2(GBM_covars$Avg_5hmC)
fit_TET1 <- lm(GBM_covars$Avg_Mval~Nanostring_norm_data[ ,'TET1'])
summary(fit_TET1)
plot(GBM_covars$Avg_Mval~Nanostring_norm_data[ ,'TET1'])
fit_TET2 <- lm(GBM_covars$Avg_Mval~Nanostring_norm_data[ ,'TET2'])
summary(fit_TET2)
plot(GBM_covars$Avg_Mval~Nanostring_norm_data[ ,'TET2'])
fit_TET3 <- lm(GBM_covars$Avg_Mval~Nanostring_norm_data[ ,'TET3'])
summary(fit_TET3)
plot(GBM_covars$Avg_Mval~Nanostring_norm_data[ ,'TET3'])
hist(Nanostring_norm_data[ ,'EGFRvIII'])
hist(Nanostring_norm_data[ ,'EGFR'])
View(Nanostring_norm_data)
View(GBM_covars)
table(GBM_covars$chr10_deletion & GBM_covars$chr7_amplication)
table(as.factor(GBM_covars$chr10_deletion) & as.factor(GBM_covars$chr7_amplication))
table(as.factor(GBM_covars$chr10_deletion),as.factor(GBM_covars$chr7_amplication))
plot(GBM_covars$EGFR_Gain~Nanostring_norm_data[ ,'EGFR'])
plot(GBM_covars$EGFR_Gain,Nanostring_norm_data[ ,'EGFR'])
GBM_covars$EGFR_Gain
Nanostring_norm_data[ ,'EGFR']
plot(as.factor(GBM_covars$EGFR_Gain),Nanostring_norm_data[ ,'EGFR'])
plot(as.factor(GBM_covars$EGFR_Gain),Nanostring_norm_data[ ,'EGFR.1'])
View(Nanostring_norm_data)
head(Nanostring_norm_data)
plot(as.factor(GBM_covars$EGFR_Gain),Nanostring_norm_data[ ,'EGFRvIII'])
incidence = read.csv("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/NormalBreast_Genomewide/Age_Incidence_Breast_Cancer_SEER.csv", header=T, stringsAsFactors=F)
plot(x=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14), incidence$Rate.per.100.000, col='pink', xlab='', ylab="Rate per 100,000", ylim=c(0,500), xaxt='n', pch=16, bty='l')
lines(x=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14), incidence$Rate.per.100.000, col='pink', lwd=3)
lablist <- incidence$Age
text(seq(1, 14, by=1), par("usr")[3] - 15, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
ppi = 300
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/SEER_incidence.png",width=5,height=5,units="cm",res=300, pointsize=6))
plot(x=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14), incidence$Rate.per.100.000, col='pink', xlab='', ylab="Rate per 100,000", ylim=c(0,500), xaxt='n', pch=16, bty='l')
lines(x=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14), incidence$Rate.per.100.000, col='pink', lwd=3)
lablist <- incidence$Age
text(seq(1, 14, by=1), par("usr")[3] - 15, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
dev.off()
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/SEER_incidence.png",width=5,height=5,units="cm",res=300, pointsize=6)
plot(x=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14), incidence$Rate.per.100.000, col='pink', xlab='', ylab="Rate per 100,000", ylim=c(0,500), xaxt='n', pch=16, bty='l')
lines(x=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14), incidence$Rate.per.100.000, col='pink', lwd=3)
lablist <- incidence$Age
text(seq(1, 14, by=1), par("usr")[3] - 15, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
dev.off()
ppi = 300
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/SEER_incidence.png",width=6,height=5,units="cm",res=300, pointsize=5)
plot(x=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14), incidence$Rate.per.100.000, col='pink', xlab='', ylab="Rate per 100,000", ylim=c(0,500), xaxt='n', pch=16, bty='l')
lines(x=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14), incidence$Rate.per.100.000, col='pink', lwd=3)
lablist <- incidence$Age
text(seq(1, 14, by=1), par("usr")[3] - 15, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
dev.off()
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/SEER_incidence.png",width=6,height=5,units="cm",res=300, pointsize=5)
plot(x=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14), incidence$Rate.per.100.000, col='pink', xlab='', ylab="Rate per 100,000", ylim=c(0,500), xaxt='n', pch=16, bty='l', lwd=2)
lines(x=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14), incidence$Rate.per.100.000, col='pink', lwd=3)
lablist <- incidence$Age
text(seq(1, 14, by=1), par("usr")[3] - 15, labels = lablist, srt = 45, pos = 1, xpd = TRUE)
dev.off()
counts <- table(mtcars$vs, mtcars$gear)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
counts
mtcars$vs
age_cpgs = read.csv("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/NormalBreast_Genomewide/Stacked_Barplot_Komen.csv", header=T, stringsAsFactors=F)
age_cpgs = read.csv("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/Stacked_Barplot_Komen.csv", header=T, stringsAsFactors=F)
age_cpgs = read.csv("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/Stacked_Barplot_Komen.csv", header=T, stringsAsFactors=F)
age_cpgs = read.csv("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/Stacked_Barplot_Komen.csv", header=T, stringsAsFactors=F)
head(age_cpgs)
counts <- table(age_cpgs$DCIS, age_cpgs$IDC)
counts
age_cpgs = read.csv("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/Stacked_Barplot_Komen.csv", header=T, stringsAsFactors=F)
counts <- table(age_cpgs$DCIS, age_cpgs$IDC)
counts
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
age_cpgs
barplot(age_cpgs, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
str(counts)
str(cpgs)
str(age_cpgs)
?table
library(reshape2)
age_cpgs$row <- seq_len(nrow(age_cpgs))
dat2 <- melt(age_cpgs, id.vars = "row")
library(ggplot2)
ggplot(dat2, aes(x=variable, y=value, fill=row)) +
geom_bar(stat="identity") +
xlab("\nType") +
ylab("Time\n") +
guides(fill=FALSE) +
theme_bw()
age_cpgs
age_cpgs = read.csv("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/Stacked_Barplot_Komen.csv", header=T, stringsAsFactors=F)
library(reshape2)
age_cpgs$row <- seq_len(nrow(age_cpgs))
dat2 <- melt(age_cpgs, id.vars = "row")
library(ggplot2)
ggplot(dat2, aes(x=variable, y=value, fill=row)) +
geom_bar(stat="identity") +
xlab("\nType") +
ylab("Time\n") +
guides(fill=FALSE) +
theme_bw()
ggplot(dat2, aes(x=variable, y=value, fill=row)) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) +
theme_bw()
overall_theme <-  theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank())
overall_theme <-  theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank())
ggplot(dat2, aes(x=variable, y=value, fill=row)) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p = ggplot(dat2, aes(x=variable, y=value, fill=row)) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("#999999", "#E69F00")
p <- ggplot(dat2, aes(x=variable, y=value, fill=row)) +
geom_bar(stat="identity") +
]
p <- ggplot(dat2, aes(x=variable, y=value, fill=row)) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("#999999", "#E69F00")
)
dat2
p <- ggplot(dat2, aes(x=variable, y=value, fill=row)) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_colour_manual(breaks = c("0", "1"),
labels = c("Cancer", "Age"),
values = c("#E69F00", "#56B4E9"))
p + scale_colour_manual(breaks = c("0", "1"),
labels = c("Cancer", "Age"),
values = c("#999999", "#E69F00"))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row)) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("#999999", "#E69F00"))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row)) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("#999999", "#E69F00"))
p + scale_fill_manual(values=c("red", "green"))
p + scale_fill_manual(values=c("red", "forestgreen"))
overall_theme <-  theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
element_text(size=20))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("red", "forestgreen"))
overall_theme <-  theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
element_text(size=20))
overall_theme <-  theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
text = element_text(size=20))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("red", "forestgreen"))
overall_theme <-  theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
text = element_text(size=20))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("red", "forestgreen"))
overall_theme <-  theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(size=20))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("red", "forestgreen"))
overall_theme <-  theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
text = element_text(size=20))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("red", "forestgreen"))
ylab("Age-related CpGs\n") +
p + scale_fill_manual(values=c("red", "chartreuse4"))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("red", "chartreuse4"))
p + scale_fill_manual(values=c("firebrick2", "chartreuse4"))
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
overall_theme <-  theme(panel.grid.minor = element_blank(),
text = element_text(size=20))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
overall_theme <-  theme(panel.grid.minor = element_blank(),
them_bw(),
text = element_text(size=20))
overall_theme <-  theme(panel.grid.minor = element_blank(),
theme_bw(),
text = element_text(size=20))
overall_theme <-  theme(panel.grid.minor = element_blank(),
theme_bw(),
text = element_text(size=20))
overall_theme <- theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size=20))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,750),
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,750) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dat2
p <- ggplot(dat2[1:2, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
p <- ggplot(dat2[3:4, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap.png",width=6,height=5,units="cm",res=300, pointsize=20)
p <- ggplot(dat2[3:4, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap.png",width=6,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[3:4, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
overall_theme <- theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size=12))
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap.png",width=3,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[3:4, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap_1.png",width=3,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[1:2, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap_2.png",width=3,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[3:4, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap_2.png",width=3,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[5:6, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap_1.png",width=3,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[1:2, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap_2.png",width=3,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[3:4, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap_3.png",width=3,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[5:6, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
overall_theme <- theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(size=10))
p <- ggplot(dat2, aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap_1.png",width=3,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[1:2, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap_2.png",width=3,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[3:4, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
png("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/CpG_Overlap_3.png",width=3,height=5,units="cm",res=300, pointsize=4)
p <- ggplot(dat2[5:6, ], aes(x=variable, y=value, fill=factor(row))) +
geom_bar(stat="identity") +
xlab("\nTissue Type") +
ylab("Age-related CpGs\n") +
ylim(0,800) +
guides(fill=FALSE) + overall_theme
p + scale_fill_manual(values=c("firebrick1", "chartreuse4"))
dev.off()
setwd("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/NormalBreast_Genomewide/")
covariates <- read.csv("I.Preprocessing/Files/Komen_Manifest_20July2015.csv", header = T, sep = ",", stringsAsFactors = F,row.names=1)
covariates$Match_IDs <- paste(covariates$Sentrix_ID, covariates$Sentrix_Position, sep="_")
covars = covariates[order(covariates$Match_IDs, decreasing=T),]
full_covariates <- read.csv("I.Preprocessing/Files/Komen_Samples_Annotation_9July2015.csv", header=T, row.names=1)
tmp_covar <- merge(covars, full_covariates, by="row.names")
rownames(tmp_covar) <- tmp_covar$Row.names
tmp_covar$Row.names <- NULL
tmp_covar$Komen_ID <- rownames(tmp_covar)
#Results from submitted 450K array data
setwd("/Users/kevinjohnson/Documents/KomenTissueNormalBreast/NormalBreast_Genomewide/V.Epigenetic_Clock/Files/")
Clock_output <- read.csv("Betas_Clock_K.output.csv", header=TRUE)
Clock_output_2 <- Clock_output[ ,c(2,56:59)]
#Get data in proper orientation
covar_clock <- merge(tmp_covar, Clock_output_2, by.x="Match_IDs", by.y="X")
rownames(covar_clock) <- covar_clock$Row.names
covar_clock$Row.names <- NULL
#########################
#Part 2: Age Correlations
#########################
library(ggplot2)
#Create BMI bins for overweight (BMI greater than 25) and normal/underweight (< 25)
covar_clock$BMI_group <- ifelse(covar_clock$BMI.x>=25.0, "overweight", "normal")
table(covar_clock$BMI_group)
cor.test(covar_clock$Age, covar_clock$DNAmAge, method="spearman") # correlation coefficient 0.95
cor.test(covar_clock$Age, covar_clock$DNAmAge, method="spearman")$p.value # 2.8E-52
overall_theme <-  theme(axis.text=element_text(size=12, face="bold"),
axis.title=element_text(size=14, face="bold"),
panel.grid.major = element_line(colour = "grey40"),
panel.grid.minor = element_blank(), legend.key = element_blank())
Breast_Clock <- ggplot(covar_clock, aes(x=Age.x, y= DNAmAge, color= Pregnant.x,  size=abs(AgeAccelerationDiff) ) )  + geom_point(alpha=1/3) +  ylim(10,100) + xlim(10,100) +
geom_abline(intercept= 0, slope=1, colour='black', alpha=1/3) + scale_size(range = c(2.5,7.5)) + theme_bw()  + overall_theme
Breast_Clock + annotate('text',x=60, 15, label='Age-DNAme Age cor = 0.95, P=<2.83e-52', alpha=0.8)
